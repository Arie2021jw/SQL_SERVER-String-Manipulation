Exercise #1: Alphabetize the individual characters within a string (column FirstName) using function STRING_AGG.


Solution #1: We extract the characters of column FirstName and place each character into a separate row, then, we use Function STRING_AGG to concatenate the characters alphabetized into a new string.

Table used: 1) [AdventureWorks2022].[Person].[Person]


Query #1: Retrieves 2 columns that compares the FirstName values from column Person.Person and a new string that has the characters of the FirstName in an alphabetical order
		+ 4 Subqueries
		+ 1 Cartesian Product
		+ 1 Iteration
		+ Window Function: ROW_NUMBER() OVER(ORDER BY)
		+ Functions: STRING_AGG, SUBSTRING, LEN, REPLACE
		+ SELECT DISTINCT 

SELECT X.FirstNames AS OriginalFirstName									-- NewFirstNames3
, STRING_AGG (X.CharactersFirstNameNoSpaces, '') WITHIN GROUP (ORDER BY X.CharactersFirstNameNoSpaces) AS NewFirstName
FROM (
	SELECT UniqueFirstName.DistinctFirstNameNoSpaces AS FirstNames						-- UniqueFirstName2.1
	, SUBSTRING(UniqueFirstName.DistinctFirstNameNoSpaces, Iteration.Position, 1) AS CharactersFirstNameNoSpaces
	FROM (
	    SELECT DISTINCT REPLACE(REPLACE(UPPER(FirstName), ' ',''),'-','') AS DistinctFirstNameNoSpaces	-- UniqueFirstNameNoSpaces1
	    FROM [AdventureWorks2022].[Person].[Person] AS UniqueFirstNameNoSpaces				-- UniqueFirstNameNoSpaces1
	    ) AS UniqueFirstName,
	    (
	    SELECT ROW_NUMBER() OVER(ORDER BY LEN(REPLACE(REPLACE(UPPER(FirstName), ' ',''),'-',''))) AS Position	-- Iteration1
	    FROM [AdventureWorks2022].[Person].[Person]									-- Iteration1
	    ) AS Iteration
	WHERE Iteration.Position <= LEN(REPLACE(UniqueFirstName.DistinctFirstNameNoSpaces, ' ',''))		-- UniqueFirstName2.1
	) AS X
GROUP BY X.FirstNames												-- NewFirstNames3
ORDER BY X.FirstNames


	-- OUTPUT
OriginalFirstName	NewFirstName
ABRAHAM			AAABHMR
ADINA			AADIN
ADRIENNE		ADEEINNR
AIDAN			AADIN
AIMEE			AEEIM
ABE			ABE
.............................................. TRUNCATED RESULTS ................
FRANÇOIS		AÇFINORS
CAROLEE			ACEELOR
CASSIE			ACEISS
CATHY			ACHTY
CECIL			CCEIL
CHARLES			ACEHLRS
.............................................. TRUNCATED RESULTS ................
MARISSA			AAIMRSS
MARJORIE		AEIJMORR
MARTY			AMRTY
MARVIN			AIMNRV
MATTHIAS		AAHIMSTT
.............................................. TRUNCATED RESULTS ................
RUDOLPH			DHLOPRU
TERRY			ERRTY
TOM			MOT
TONI			INOT
TSVI			ISTV
TWANNA			AANNTW
VERONICA		ACEINORV
.............................................. TRUNCATED RESULTS ................
WILSON			ILNOSW
WYATT			ATTWY
Y.			.Y
ZOE			EOZ
(1018 rows affected)
(end of results)




	Explanation for this solution:
	------------------------------

1) Subquery (#1.1) UniqueFirstNameNoSpaces:
a) removes the whitespaces for values in column FirstName and capitalizes all characters for FirstName values, then,
b) removes all duplicated values leaving only a unique list of FirstNames from table [AdventureWorks2022].[Person].[Person].
This query returns 1,018 rows.
For guidance we call it "UniqueFirstNameNoSpaces". 
This subquery is at Level 1.


2) Subquery "Iteration":
Uses Window Function ROW_NUMBER() which returns a list of sequential numbers, starting at 1 for the first row in each partition, ending at 19,972.
19,972 is the number of rows in table [AdventureWorks2022].[Person].[Person].
This subquery is at Level 1.


3) Subquery (#1.2) "UniqueFirstName2": uses a function SUBSTRING along with a Cartesian Product to return the characters of the FirstName:
a) the function SUBSTRING extracts the characters of the FirstName and places them in a separate row.
b) this query returns a total of 20,331,496 rows = 1,018 multiplied by 19,972.
For guidance we call it "UniqueFirstNameNoSpaces1". 
This subquery is at Level 2.

3.1) Cartesian Product:
The 20,331,496 rows resulted from the use of a Cartesian Product between the output of Query (#1.1) UniqueFirstNameNoSpaces and Subquery Iteration.
Cartesian Product: has a dimension of 1,018 X 19,972, meaning 20,331,496 rows.
1,018 = total number of unique FirstNames.
Subquery Iteration: has a total of 19,972 rows.


4) Subquery #1.2.1: WHERE clause and the iteration:
After adding the WHERE clause ( 
WHERE Iteration.Position <= LEN(REPLACE(UniqueFirstName.DistinctFirstNameNoSpaces, ' ',''))) at the end of Query (#1.2) "UniqueFirstName2", we reduce the OUTPUT from 20,331,496 rows to 5,884 rows.

5,884 rows = sum of the character length for the 1,018 unique FirstNames.


5) Subquery (#1.3) "NewNames3":
Uses function STRING_AGG to concatenate the characters of the FirstName in alphabetical order.

Arguments of function STRING_AGG:
expression: are the FirstNames values with no whitespaces
separator: no separator was used when concatenating each character of FirstName
ORDER BY clause of the WITHIN GROUP clause: 
the ORDER BY clause allows us to return the NewFirstName as a string ordered by the alphabetical order of the individual characters


Below is an extract of the values for this solution.

OriginalFirstName	NewFirstName
ABRAHAM			AAABHMR
ADINA			AADIN
ADRIENNE		ADEEINNR
AIDAN			AADIN
AIMEE			AEEIM
ABE			ABE




Below are the queries used step-by-step for this solution.


	Query #1.1: Retrieves the list of unique first names from table [AdventureWorks2022].[Person].[Person]
	-----------
SELECT REPLACE(REPLACE(UPPER(FirstName), ' ',''),'-','') AS FirstNameNoSpaces		-- UniqueFirstNameNoSpaces1
FROM [AdventureWorks2022].[Person].[Person] AS UniqueFirstNameNoSpaces			-- UniqueFirstNameNoSpaces1

	-- OUTPUT
FirstNameNoSpaces
A.
A.SCOTT
AARON
ABBY
................ TRUNCATED RESULTS ................
YUHONG
YUPING
YVONNE
ZACHARY
ZAINAL
ZHENG
ZOE
(1018 rows affected)
(end of results)





	Query #1.2: We retrieve the characters for each value in column FirstName using a Cartesian Product
	-----------

SELECT UniqueFirstName.FirstNameNoSpaces AS UniqueFirstName			-- UniqueFirstName2
, SUBSTRING(UniqueFirstName.FirstNameNoSpaces, Iteration.Position, 1) AS FirstCharacterUniqueFirstName
FROM (
	SELECT DISTINCT REPLACE(REPLACE(UPPER(FirstName), ' ',''),'-','') AS FirstNameNoSpaces		-- UniqueFirstNameNoSpaces1
	FROM [AdventureWorks2022].[Person].[Person] AS UniqueFirstNameNoSpaces				-- UniqueFirstNameNoSpaces1
	) AS UniqueFirstName,	
	(
	SELECT ROW_NUMBER() OVER(ORDER BY LEN(REPLACE(REPLACE(UPPER(FirstName), ' ',''),'-',''))) AS Position		-- Iteration1
	FROM [AdventureWorks2022].[Person].[Person]									-- Iteration1
	) AS Iteration								-- UniqueFirstName2


	-- OUTPUT
Row #		UniqueFirstName		FirstCharacterUniqueFirstName
1		A.			A
2		A.			.
3		A.			
4		A.			
5		A.			
.............................................. TRUNCATED RESULTS ................
19971		A.	
19972		A.	
19973		A.SCOTT			A
19974		A.SCOTT			.
19975		A.SCOTT			S
19976		A.SCOTT			C
19977		A.SCOTT			O
19978		A.SCOTT			T
19979		A.SCOTT			T
19980		A.SCOTT	
19981		A.SCOTT	
.............................................. TRUNCATED RESULTS ................
39944		A.SCOTT			
39945		AARON			A
39946		AARON			A
39947		AARON			R
39948		AARON			O
39949		AARON			N
39950		AARON	
.............................................. TRUNCATED RESULTS ................
(20331496 rows affected)
(end of results)





	Query #1.2.1: We retrieve the characters for each value in column FirstName using a Cartesian Product and a WHERE clause
	-------------

SELECT UniqueFirstName.FirstNameNoSpaces AS UniqueFirstName								-- UniqueFirstName2
, SUBSTRING(UniqueFirstName.FirstNameNoSpaces, Iteration.Position, 1) AS FirstCharacterUniqueFirstName
FROM (
	SELECT DISTINCT REPLACE(REPLACE(UPPER(FirstName), ' ',''),'-','') AS FirstNameNoSpaces			-- UniqueFirstNameNoSpaces1
	FROM [AdventureWorks2022].[Person].[Person] AS UniqueFirstNameNoSpaces					-- UniqueFirstNameNoSpaces1
	) AS UniqueFirstName,	
	(
	SELECT ROW_NUMBER() OVER(ORDER BY LEN(REPLACE(REPLACE(UPPER(FirstName), ' ',''),'-',''))) AS Position		-- Iteration1
	FROM [AdventureWorks2022].[Person].[Person]									-- Iteration1
	) AS Iteration								-- UniqueFirstName2
WHERE Iteration.Position <= LEN(REPLACE(UniqueFirstName.FirstNameNoSpaces, ' ',''))			-- UniqueFirstName2.1


	-- OUTPUT
FirstName 		CharactersFirstNameNoSpaces
A.			A
A.			.
A.SCOTT			A
A.SCOTT			.
A.SCOTT			S
A.SCOTT			C
A.SCOTT			O
A.SCOTT			T
A.SCOTT			T
AARON			A
.............................................. TRUNCATED RESULTS ................
KIRK			K
KIRK			I
KIRK			R
KIRK			K
.............................................. TRUNCATED RESULTS ................
ZHENG			Z
ZHENG			H
ZHENG			E
ZHENG			N
ZHENG			G
ZOE			Z
ZOE			O
ZOE			E
(5880 rows affected)
(end of results)





	Query #1.3: We retrieve the concatenated characters of the FirstName in alphabetical order using function STRING_AGG
	-----------

SELECT X.FirstNames AS OriginalFirstName							-- NewNames3
, STRING_AGG (X.CharactersFirstNameNoSpaces, '') WITHIN GROUP (ORDER BY X.CharactersFirstNameNoSpaces) AS NewFirstName
FROM (
	SELECT UniqueFirstName.DistinctFirstNameNoSpaces AS FirstNames						-- UniqueFirstName2.1
	, SUBSTRING(UniqueFirstName.DistinctFirstNameNoSpaces, Iteration.Position, 1) AS CharactersFirstNameNoSpaces
	FROM (
		SELECT DISTINCT REPLACE(REPLACE(UPPER(FirstName), ' ',''),'-','') AS DistinctFirstNameNoSpaces	-- UniqueFirstNameNoSpaces1
		FROM [AdventureWorks2022].[Person].[Person] AS UniqueFirstNameNoSpaces				-- UniqueFirstNameNoSpaces1
		) AS UniqueFirstName,
		(
		SELECT ROW_NUMBER() OVER(ORDER BY LEN(REPLACE(REPLACE(UPPER(FirstName), ' ',''),'-',''))) AS Position		-- Iteration1
		FROM [AdventureWorks2022].[Person].[Person]									-- Iteration1
		) AS Iteration	
	WHERE Iteration.Position <= LEN(REPLACE(UniqueFirstName.DistinctFirstNameNoSpaces, ' ',''))		-- UniqueFirstName2.1
	) AS X
GROUP BY X.FirstNames										-- NewNames3
ORDER BY X.FirstNames										


	-- OUTPUT
OriginalFirstName	NewFirstName
A.			.A
A.SCOTT			.ACOSTT
AARON			AANOR
ABBY			ABBY
ABE			ABE
ABHIJIT			ABHIIJT
.............................................. TRUNCATED RESULTS ................
DEENA			ADEEN
DEEPAK			ADEEKP
DELIA			ADEIL
DELLA			ADELL
DENEAN			ADEENN
.............................................. TRUNCATED RESULTS ................
JOSSEF			EFJOSS
JOSUE			EJOSU
JOVITA			AIJOTV
JOY			JOY
JOYCE			CEJOY
.............................................. TRUNCATED RESULTS ................
ORLANDO			ADLNOOR
OSARUMWENSE		AEEMNORSSUW
OSCAR			ACORS
OVIDIU			DIIOUV
.............................................. TRUNCATED RESULTS ................
YVONNE			ENNOVY
ZACHARY			AACHRYZ
ZAINAL			AAILNZ
ZHENG			EGHNZ
ZOE			EOZ
(1018 rows affected)
(end of results)







Solution #2: As an alternative for solution #1, below we show how we can solve this exercise using Common Table Expression (CTEs).

	Query #2: Solving this exercise usisng Common Table Expression (CTEs)
		+ 4 Subqueries
		+ 1 Cartesian Product
		+ 1 Iteration
		+ Window Function: ROW_NUMBER() OVER(ORDER BY)
		+ Functions: STRING_AGG, SUBSTRING, LEN, REPLACE
		+ SELECT DISTINCT 

WITH 
UniqueFirstName AS 
( 
	SELECT DISTINCT REPLACE(UPPER(FirstName), ' ','') AS DistinctFirstNameNoSpaces			-- UniqueFirstNameNoSpaces1
	FROM [AdventureWorks2022].[Person].[Person] AS UniqueFirstNameNoSpaces				-- UniqueFirstNameNoSpaces1
),
Iteration AS 
( 
	SELECT ROW_NUMBER() OVER(ORDER BY LEN(REPLACE(UPPER(FirstName), ' ',''))) AS Position		-- Iteration1
	FROM [AdventureWorks2022].[Person].[Person]							-- Iteration1
),
IteratedUniqueFirstName AS 
( 
	SELECT UniqueFirstName.DistinctFirstNameNoSpaces AS FirstNames							-- UniqueFirstName2.1
	, SUBSTRING(UniqueFirstName.DistinctFirstNameNoSpaces, Iteration.Position, 1) AS CharactersFirstNameNoSpaces
	FROM UniqueFirstName, Iteration
	WHERE Iteration.Position <= LEN(REPLACE(UniqueFirstName.DistinctFirstNameNoSpaces, ' ',''))			-- UniqueFirstName2.1
)
SELECT FirstNames
, STRING_AGG (CharactersFirstNameNoSpaces, '') WITHIN GROUP (ORDER BY CharactersFirstNameNoSpaces) AS NewFirstName
--, CharactersFirstNameNoSpaces
FROM IteratedUniqueFirstName
GROUP BY FirstNames 
ORDER BY FirstNames


	-- OUTPUT
We get the same results as in Query #1.3.
